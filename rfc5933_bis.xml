<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3110 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3110.xml">
<!ENTITY RFC4033 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4033.xml">
<!ENTITY RFC4034 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4034.xml">
<!ENTITY RFC4035 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml">
<!ENTITY RFC4357 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4357.xml">
<!ENTITY RFC4490 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4490.xml">
<!ENTITY RFC4491 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4491.xml">
<!ENTITY RFC5155 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5155.xml">
<!ENTITY RFC4509 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4509.xml">
<!ENTITY RFC5830 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5830.xml">
<!ENTITY RFC5831 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5831.xml">
<!ENTITY RFC5832 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5832.xml">
]>
<rfc submissionType="IETF" number="5933" category="std" consensus="yes">
	<!-- Generated by id2xml 1.5.0 on 2019-09-08T16:24:16Z -->
	<?rfc strict="yes"?>
	<?rfc compact="yes"?>
	<?rfc subcompact="no"?>
	<?rfc symrefs="yes"?>
	<?rfc sortrefs="no"?>
	<?rfc text-list-symbols="o*+-"?>
	<?rfc toc="yes"?>
	<front>
	<title abbrev="Use of GOST Signatures in DNSSEC">Use of GOST Signature Algorithms in DNSKEY and RRSIG Resource Records for DNSSEC</title>
	<author fullname="Vasily Dolmatov" initials="V." role="editor" surname="Dolmatov">
	<organization>Cryptocom Ltd.</organization>
	<address><postal><street>14/2, Kedrova St.</street>
	<street>Moscow,   117218</street>
	<street>Russian Federation</street>
	</postal>
	<phone>+7 499 124 6226</phone>
	<email>dol@cryptocom.ru</email>
	</address>
	</author>

	<author fullname="Artem Chuprina" initials="A." surname="Chuprina">
	<organization>Cryptocom Ltd.</organization>
	<address><postal><street>14/2, Kedrova St.</street>
	<street>Moscow,   117218</street>
	<street>Russian Federation</street>
	</postal>
	<phone>+7 499 124 6226</phone>
	<email>ran@cryptocom.ru</email>
	</address>
	</author>

	<author fullname="Igor Ustinov" initials="I." surname="Ustinov">
	<organization>Cryptocom Ltd.</organization>
	<address><postal><street>14/2, Kedrova St.</street>
	<street>Moscow,   117218</street>
	<street>Russian Federation</street>
	</postal>
	<phone>+7 499 124 6226</phone>
	<email>igus@cryptocom.ru</email>
	</address>
	</author>

	<date month="July" year="2010"/>
	<abstract><t>
   This document describes how to produce digital signatures and hash
   functions using the GOST R 34.10-2001 and GOST R 34.11-94 algorithms
   for DNSKEY, RRSIG, and DS resource records, for use in the Domain
   Name System Security Extensions (DNSSEC).</t>

	</abstract>
	</front>

	<middle>
	<section title="Introduction" anchor="sect-1"><t>
   The Domain Name System (DNS) is the global hierarchical distributed
   database for Internet Naming.  The DNS has been extended to use
   cryptographic keys and digital signatures for the verification of the
   authenticity and integrity of its data.  RFC 4033 <xref target="RFC4033"/>, RFC 4034
   <xref target="RFC4034"/>, and RFC 4035 <xref target="RFC4035"/> describe these DNS Security
   Extensions, called DNSSEC.</t>

	<t>
   RFC 4034 describes how to store DNSKEY and RRSIG resource records,
   and specifies a list of cryptographic algorithms to use.  This
   document extends that list with the signature and hash algorithms
   GOST R 34.10-2001 ([GOST3410], <xref target="RFC5832"/>) and GOST R 34.11-94
   ([GOST3411], <xref target="RFC5831"/>), and specifies how to store DNSKEY data and
   how to produce RRSIG resource records with these algorithms.</t>

	<t>
   Familiarity with DNSSEC and with GOST signature and hash algorithms
   is assumed in this document.</t>

	<t>
   The term "GOST" is not officially defined, but is usually used to
   refer to the collection of the Russian cryptographic algorithms
   GOST R 34.10-2001 <xref target="RFC5832"/>, GOST R 34.11-94 <xref target="RFC5831"/>, and
   GOST 28147-89 <xref target="RFC5830"/>.  Since GOST 28147-89 is not used in DNSSEC,
   "GOST" will only refer to GOST R 34.10-2001 and GOST R 34.11-94 in
   this document.</t>

	<section title="Terminology" anchor="sect-1.1"><t>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in <xref target="RFC2119"/>.</t>

	</section>

	</section>

	<section title="DNSKEY Resource Records" anchor="sect-2"><t>
   The format of the DNSKEY RR can be found in RFC 4034 <xref target="RFC4034"/>.</t>

	<t>
   GOST R 34.10-2001 public keys are stored with the algorithm
   number 12.</t>

	<t>
   The wire format of the public key is compatible with RFC 4491
   <xref target="RFC4491"/>:</t>

	<t>
   According to [GOST3410] and <xref target="RFC5832"/>, a public key is a point on the
   elliptic curve Q = (x,y).</t>

	<t>
   The wire representation of a public key MUST contain 64 octets, where
   the first 32 octets contain the little-endian representation of x and
   the second 32 octets contain the little-endian representation of y.</t>

	<t>
   Corresponding public key parameters are those identified by
   id-GostR3410-2001-CryptoPro-A-ParamSet (1.2.643.2.2.35.1) <xref target="RFC4357"/>,
   and the digest parameters are those identified by
   id-GostR3411-94-CryptoProParamSet (1.2.643.2.2.30.1) <xref target="RFC4357"/>.</t>

	<section title="Using a Public Key with Existing Cryptographic Libraries" anchor="sect-2.1"><t>
   At the time of this writing, existing GOST-aware cryptographic
   libraries are capable of reading GOST public keys via a generic X509
   API if the key is encoded according to RFC 4491 <xref target="RFC4491"/>,
   Section 2.3.2.</t>

	<t>
   To make this encoding from the wire format of a GOST public key with
   the parameters used in this document, prepend the 64 octets of key
   data with the following 37-byte sequence:</t>

	<t><list hangIndent="3" style="hanging"><t>
      0x30 0x63 0x30 0x1c 0x06 0x06 0x2a 0x85 0x03 0x02 0x02 0x13 0x30
      0x12 0x06 0x07 0x2a 0x85 0x03 0x02 0x02 0x23 0x01 0x06 0x07 0x2a
      0x85 0x03 0x02 0x02 0x1e 0x01 0x03 0x43 0x00 0x04 0x40</t>

	</list>
	</t>

	</section>

	<section title="GOST DNSKEY RR Example" anchor="sect-2.2"><t>
   Given a private key with the following value (the value of the
   GostAsn1 field is split here into two lines to simplify reading; in
   the private key file, it must be in one line):</t>

	<figure><artwork><![CDATA[
   Private-key-format: v1.2
   Algorithm: 12 (ECC-GOST)
   GostAsn1: MEUCAQAwHAYGKoUDAgITMBIGByqFAwICIwEGByqFAwICHgEEIgQg/9M
             iXtXKg9FDXDN/R9CmVhJDyuzRAIgh4tPwCu4NHIs=

The following DNSKEY RR stores a DNS zone key for example.net:

   example.net. 86400 IN DNSKEY 256 3 12 (
                                aRS/DcPWGQj2wVJydT8EcAVoC0kXn5pDVm2I
                                MvDDPXeD32dsSKcmq8KNVzigjL4OXZTV+t/6
                                w4X1gpNrZiC01g==
                                ) ; key id = 59732
]]></artwork>
	</figure>
	</section>

	</section>

	<section title="RRSIG Resource Records" anchor="sect-3"><t>
   The value of the signature field in the RRSIG RR follows RFC 4490
   <xref target="RFC4490"/> and is calculated as follows.  The values for the RDATA
   fields that precede the signature data are specified in RFC 4034
   <xref target="RFC4034"/>.</t>

	<figure><artwork><![CDATA[
hash = GOSTR3411(data)
]]></artwork>
	</figure>
	<t>
   where "data" is the wire format data of the resource record set that
   is signed, as specified in RFC 4034 <xref target="RFC4034"/>.</t>

	<t>
   The hash MUST be calculated with GOST R 34.11-94 parameters
   identified by id-GostR3411-94-CryptoProParamSet <xref target="RFC4357"/>.</t>

	<t>
   The signature is calculated from the hash according to the
   GOST R 34.10-2001 standard, and its wire format is compatible with
   RFC 4490 <xref target="RFC4490"/>.</t>

	<t>
   Quoting RFC 4490:</t>

	<t>
   "The signature algorithm GOST R 34.10-2001 generates a digital signature in the form of two 256-bit numbers, r and s.  Its octet string representation consists of 64 octets, where the first 32 octets contain the big-endian representation of s and the second 32 octets contain the big-endian representation of r".</t>

	<section title="RRSIG RR Example" anchor="sect-3.1"><t>
   With the private key from <xref target="sect-2.2"/>, sign the following RRSet,
   consisting of one A record:</t>

	<t><list hangIndent="3" style="hanging"><t>
      www.example.net. 3600 IN A 192.0.2.1</t>

	</list>
	</t>

	<t>
   Setting the inception date to 2000-01-01 00:00:00 UTC and the
   expiration date to 2030-01-01 00:00:00 UTC, the following signature
   RR will be valid:</t>

	<t><list style="empty" hangIndent="2">
	<t><list style="hanging" hangIndent="31"><t hangText="www.example.net. 3600 IN RRSIG A 12 3 3600 20300101000000 (">
	<vspace blankLines="0"/>
	20000101000000 59732 example.net.
                                    7vzzz6iLOmvtjs5FjVjSHT8XnRKFY15ki6Kp
                                    kNPkUnS8iIns0Kv4APT+D9ibmHhGri6Sfbyy
                                    zi67+wBbbW/jrA== )
	</t>

	</list>
	</t>

	</list>
	</t>

	<t>
   Note: The ECC-GOST signature algorithm uses random data, so the
   actual computed signature value will differ between signature
   calculations.</t>

	</section>

	</section>

	<section title="DS Resource Records" anchor="sect-4"><t>
   The GOST R 34.11-94 digest algorithm is denoted in DS RRs by the
   digest type 3.  The wire format of a digest value is compatible with
   RFC 4490 <xref target="RFC4490"/>, that is, the digest is in little-endian
   representation.</t>

	<t>
   The digest MUST always be calculated with GOST R 34.11-94 parameters
   identified by id-GostR3411-94-CryptoProParamSet <xref target="RFC4357"/>.</t>

	<section title="DS RR Example" anchor="sect-4.1"><t><list style="hanging" hangIndent="3"><t hangText="For Key Signing Key (KSK):">
	<vspace blankLines="1"/>
	example.net. 86400   DNSKEY  257 3 12 (
                                   LMgXRHzSbIJGn6i16K+sDjaDf/k1o9DbxScO
                                   gEYqYS/rlh2Mf+BRAY3QHPbwoPh2fkDKBroF
                                   SRGR7ZYcx+YIQw==
                                   ) ; key id = 40692
	</t>

	<t hangText="The DS RR will be">
	<vspace blankLines="1"/>
	example.net. 3600 IN DS 40692 12 3 (
                22261A8B0E0D799183E35E24E2AD6BB58533CBA7E3B14D659E9CA09B
                2071398F )
	</t>

	</list>
	</t>

	</section>

	</section>

	<section title="Deployment Considerations" anchor="sect-5"><section title="Key Sizes" anchor="sect-5.1"><t>
   According to RFC 4357 <xref target="RFC4357"/>, the key size of GOST public keys
   MUST be 512 bits.</t>

	</section>

	<section title="Signature Sizes" anchor="sect-5.2"><t>
   According to the GOST R 34.10-2001 digital signature algorithm
   specification ([GOST3410], <xref target="RFC5832"/>), the size of a GOST signature
   is 512 bits.</t>

	</section>

	<section title="Digest Sizes" anchor="sect-5.3"><t>
   According to GOST R 34.11-94 ([GOST3411], <xref target="RFC5831"/>), the size of a
   GOST digest is 256 bits.</t>

	</section>

	</section>

	<section title="Implementation Considerations" anchor="sect-6"><section title="Support for GOST Signatures" anchor="sect-6.1"><t>
   DNSSEC-aware implementations MAY be able to support RRSIG and DNSKEY
   resource records created with the GOST algorithms as defined in this
   document.</t>

	</section>

	<section title="Support for NSEC3 Denial of Existence" anchor="sect-6.2"><t>
   Any DNSSEC-GOST implementation MUST support both NSEC <xref target="RFC4035"/> and
   NSEC3 <xref target="RFC5155"/>.</t>

	</section>

	</section>

	<section title="Security Considerations" anchor="sect-7"><t>
   Currently, the cryptographic resistance of the GOST R 34.10-2001
   digital signature algorithm is estimated as 2**128 operations of
   multiple elliptic curve point computations on prime modulus of order
   2**256.</t>

	<t>
   Currently, the cryptographic resistance of the GOST R 34.11-94 hash
   algorithm is estimated as 2**128 operations of computations of a step
   hash function.  (There is a known method to reduce this estimate to
   2**105 operations, but it demands padding the colliding message with
   1024 random bit blocks each of 256-bit length; thus, it cannot be
   used in any practical implementation).</t>

	</section>

	<section title="IANA Considerations" anchor="sect-8"><t>
   This document updates the IANA registry "DNS Security Algorithm Numbers" <xref target="RFC4034"/>.  The following entries have been added to the
   registry:</t>

	<figure><artwork><![CDATA[
                                   Zone    Trans.
 Value  Algorithm         Mnemonic Signing Sec.  References   Status
  12    GOST R 34.10-2001 ECC-GOST     Y   *     RFC 5933    OPTIONAL
]]></artwork>
	</figure>
	<t>
   This document updates the RFC 4034 Digest Types assignment
   (<xref target="RFC4034"/>, Section A.2) by adding the value and status for the
   GOST R 34.11-94 algorithm:</t>

	<figure><artwork><![CDATA[
   Value   Algorithm        Status
     3    GOST R 34.11-94  OPTIONAL
]]></artwork>
	</figure>
	</section>

	<section title="Acknowledgments" anchor="sect-9"><t>
   This document is a minor extension to RFC 4034 <xref target="RFC4034"/>.  Also, we
   tried to follow the documents RFC 3110 <xref target="RFC3110"/>, RFC 4509 <xref target="RFC4509"/>,
   and RFC 4357 <xref target="RFC4357"/> for consistency.  The authors of and
   contributors to these documents are gratefully acknowledged for their
   hard work.</t>

	<t>
   The following people provided additional feedback, text, and valuable
   assistance: Dmitry Burkov, Jaap Akkerhuis, Olafur Gundmundsson,
   Jelte Jansen, and Wouter Wijngaards.</t>

	</section>

	</middle>

	<back>
	<references title="Normative References">
	&RFC2119;
	&RFC3110;
	&RFC4033;
	&RFC4034;
	&RFC4035;
	&RFC4357;
	&RFC4490;
	&RFC4491;
	&RFC5155;
	</references>
	<references title="Informative References">
	&RFC4509;
	&RFC5830;
	&RFC5831;
	&RFC5832;
	</references>
	</back>

	</rfc>
	
